directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreateItemInput is used for create Item object.
Input was generated by ent.
"""
input CreateItemInput {
  createdAt: Time
  updatedAt: Time
  name: String!
  quantity: Int!
  category: ItemCategory!
  storageLocationID: ID
}
"""
CreateStorageLocationInput is used for create StorageLocation object.
Input was generated by ent.
"""
input CreateStorageLocationInput {
  createdAt: Time
  updatedAt: Time
  name: String!
  size: StorageLocationSize!
  color: StorageLocationColor!
  itemIDs: [ID!]
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type Item implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  name: String!
  quantity: Int!
  category: ItemCategory!
  storageLocation: StorageLocation
}
"""
ItemCategory is enum for the field category
"""
enum ItemCategory @goModel(model: "goinv/ent/item.Category") {
  adapter
  cable
  device
  misc
}
"""
A connection to a list of items.
"""
type ItemConnection {
  """
  A list of edges.
  """
  edges: [ItemEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ItemEdge {
  """
  The item at the end of the edge.
  """
  node: Item
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ItemWhereInput is used for filtering Item objects.
Input was generated by ent.
"""
input ItemWhereInput {
  not: ItemWhereInput
  and: [ItemWhereInput!]
  or: [ItemWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  quantity field predicates
  """
  quantity: Int
  quantityNEQ: Int
  quantityIn: [Int!]
  quantityNotIn: [Int!]
  quantityGT: Int
  quantityGTE: Int
  quantityLT: Int
  quantityLTE: Int
  """
  category field predicates
  """
  category: ItemCategory
  categoryNEQ: ItemCategory
  categoryIn: [ItemCategory!]
  categoryNotIn: [ItemCategory!]
  """
  storage_location edge predicates
  """
  hasStorageLocation: Boolean
  hasStorageLocationWith: [StorageLocationWhereInput!]
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "goinv/ent.Noder") {
  """
  The id of the object.
  """
  id: ID!
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node
  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]!
  items(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Items returned from the connection.
    """
    where: ItemWhereInput
  ): ItemConnection!
  storageLocations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for StorageLocations returned from the connection.
    """
    where: StorageLocationWhereInput
  ): StorageLocationConnection!
}
type StorageLocation implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  name: String!
  size: StorageLocationSize!
  color: StorageLocationColor!
  items: [Item!]
}
"""
StorageLocationColor is enum for the field color
"""
enum StorageLocationColor @goModel(model: "goinv/ent/storagelocation.Color") {
  white
  gray
  stealth
  orange
  black
  other
}
"""
A connection to a list of items.
"""
type StorageLocationConnection {
  """
  A list of edges.
  """
  edges: [StorageLocationEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type StorageLocationEdge {
  """
  The item at the end of the edge.
  """
  node: StorageLocation
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
StorageLocationSize is enum for the field size
"""
enum StorageLocationSize @goModel(model: "goinv/ent/storagelocation.Size") {
  half
  full
  other
}
"""
StorageLocationWhereInput is used for filtering StorageLocation objects.
Input was generated by ent.
"""
input StorageLocationWhereInput {
  not: StorageLocationWhereInput
  and: [StorageLocationWhereInput!]
  or: [StorageLocationWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  size field predicates
  """
  size: StorageLocationSize
  sizeNEQ: StorageLocationSize
  sizeIn: [StorageLocationSize!]
  sizeNotIn: [StorageLocationSize!]
  """
  color field predicates
  """
  color: StorageLocationColor
  colorNEQ: StorageLocationColor
  colorIn: [StorageLocationColor!]
  colorNotIn: [StorageLocationColor!]
  """
  items edge predicates
  """
  hasItems: Boolean
  hasItemsWith: [ItemWhereInput!]
}
"""
The builtin Time type
"""
scalar Time
"""
UpdateItemInput is used for update Item object.
Input was generated by ent.
"""
input UpdateItemInput {
  updatedAt: Time
  name: String
  quantity: Int
  category: ItemCategory
  storageLocationID: ID
  clearStorageLocation: Boolean
}
"""
UpdateStorageLocationInput is used for update StorageLocation object.
Input was generated by ent.
"""
input UpdateStorageLocationInput {
  updatedAt: Time
  name: String
  size: StorageLocationSize
  color: StorageLocationColor
  addItemIDs: [ID!]
  removeItemIDs: [ID!]
  clearItems: Boolean
}
